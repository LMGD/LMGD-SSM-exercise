<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
    <display-name>Archetype Created Web Application</display-name>

    <!--配置spring容器监听器-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext-*.xml</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- SpringMVC配置-->
    <servlet>
        <servlet-name>springMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
         <!--加载springmvc配置文件-->
         <init-param>
             <param-name>contextConfigLocation</param-name>
             <!--配置文件的地址
              如果不配置contextConfigLocation，默认查找的配置文件名称是classpath下的:servlet名称+"-servlet.xml"即springmvc-servlet.xml-->
             <param-value>classpath:springMVC.xml</param-value>
         </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>springMVC</servlet-name>
        <!--可以配置/：此工程所有的请求全部由springmvc解析，此种方式可以实现RESTful方式，需要特殊处理对静态文件的解析不能由springmvc解析
        可以配置*.do或者*.action,所有请求的url扩展名为.do或.action由springmvc解析，此中方法常用
        不可以配置/*,如果配置/*,返回jsp也由springmvc解析，这是不对的-->
        <!--LMGD:可以配置 /* 但是你需要在 springMVC中配置 jsp文件、js样式..不被拦截-->
        <url-pattern>*.action</url-pattern>
    </servlet-mapping>


</web-app>
